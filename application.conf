deepdive {

  db.default {
    driver   : "org.postgresql.Driver"
    url      : "jdbc:postgresql://"${PGHOST}":"${PGPORT}"/"${DBNAME}
    user     : ${PGUSER}
    password : ${PGPASSWORD}
    dbname   : ${DBNAME}
    host     : ${PGHOST}
    port     : ${PGPORT}
  }

  ###
  ### VARIABLES
  ###

  schema.variables {

    # Want to predict whether or not a given date is enjoyable
    enjoyable.is_enjoyable: Boolean

  }

  ###
  ### EXTRACTORS
  ###

  extraction.extractors {

    cleanup {
      sql: """
        DELETE FROM unigram
      """
      style: "sql_extractor"
    }

    # For each date, extract the unigrams from the transcript
    unigrams {
      input: """
        SELECT * FROM original_features;
      """
      output_relation: "unigram"
      udf: ${APP_HOME}"/udf/extract_unigram.py"
      style: "tsv_extractor"
      dependencies: ["cleanup"]
    }


    # TODO: insert the training data

  }

  ###
  ### INFERENCE RULES
  ###

  inference.factors {

    # Learn the output label based on the features for this date
    date_enjoyable {
      input_query: """
          SELECT enjoyable.id AS id,
                 enjoyable.is_enjoyable AS is_enjoyable,
                 unigram.feature AS feature
          FROM unigram,
               enjoyable
          WHERE unigram.dateid = enjoyable.dateid
        """
      function: "IsTrue(enjoyable.is_enjoyable)"
      weight: "?(feature)"
    }

  }

  # Specify a holdout fraction
  calibration.holdout_fraction: 0.00

}
